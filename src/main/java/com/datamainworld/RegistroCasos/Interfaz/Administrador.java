/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.datamainworld.RegistroCasos.Interfaz;

import com.datamainworld.RegistroCasos.OracleConecction;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ComponentListener;
import java.sql.*;

/**
 *
 * @author PC
 */
public class Administrador extends javax.swing.JFrame {

    /**
     * Creates new form Empleado_ClientSolution
     */
    private DefaultListModel modelList(int codArea){
        DefaultListModel model = new DefaultListModel<>();
        Connection connection = new OracleConecction().conectar();

        String sql = "SELECT * FROM Empleado WHERE cod_area="+codArea+" ORDER BY cod_empleado";
        try {
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(sql);
            while(result.next()){
                String codSol = result.getString("nombre");
                model.addElement(codSol);
            }
            connection.close();
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }

        return model;
    }

    public void eliminarFilas(){
        DefaultTableModel model = (DefaultTableModel) Table_Solicitud.getModel();
        int filas = model.getRowCount();
        for (int i=1;i<=filas;i++){
            model.removeRow(0);
        }
    }

    public void llenarSolicitudes(){
        Connection connection = new OracleConecction().conectar();
        String sql = "SELECT s.cod_solicitud, s.status, p.fuente, e.canal, s.descripcion, s.cod_incidencia," +
                " se.fecha_inicio, se.fecha_cierre FROM Solicitud s, Problema p, Error e, Solicitud_Empleado se " +
                "WHERE se.cod_solicitud=s.cod_solicitud AND s.cod_problema=p.cod_problema AND p.cod_error=e.cod_error ORDER BY s.cod_solicitud";
        eliminarFilas();
        DefaultTableModel model = (DefaultTableModel) Table_Solicitud.getModel();
        //model.addRow(new Object[]{"1","2","3","4","5","6","7","8"});
        try{
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(sql);
            while (result.next()){
                String e1 = result.getString(1); //cod
                String e2 = result.getString(2); //status
                String e3 = result.getString(3); //fuente
                String e4 = result.getString(4); //canal
                String e5 = result.getString(5); //descripcion
                String e6 = result.getString(6); //incidencia
                if (e6==null){
                    e6="NO";
                }else{
                    e6="SI";
                }
                String e7 = String.valueOf(result.getDate(7)); //fecha_inicio
                String e8 = String.valueOf(result.getDate(8)); //fecha_cierre
                if (e8.equalsIgnoreCase("null")){
                    e8=" -- / -- / -- ";
                }
                model.addRow(new Object[]{e1,e2,e3,e4,e5,e6,e7,e8});
            }
        }catch (SQLException throwables) {
            throwables.printStackTrace();
        }
    }

    public Administrador() {
        initComponents();
        this.setLocationRelativeTo(null);
        jList1.setModel(modelList(1));
        jList2.setModel(modelList(2));
        llenarSolicitudes();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        But_Add_EmpleadoCS = new javax.swing.JButton();
        But_Ver_EmpleadoCS = new javax.swing.JButton();
        But_VerSolicitud = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table_Solicitud = new javax.swing.JTable();
        But_Add_EmpleadoE = new javax.swing.JButton();
        But_Ver_EmpleadoE = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        But_Filtro_Estado = new javax.swing.JButton();
        But_Filtro_Fechas = new javax.swing.JButton();
        But_SinFiltro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Administrador");

        But_Add_EmpleadoCS.setText("Agregar empleado CS");
        But_Add_EmpleadoCS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_Add_EmpleadoCSActionPerformed(evt);
            }
        });

        But_Ver_EmpleadoCS.setText("Ver datos del empleado");
        But_Ver_EmpleadoCS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_Ver_EmpleadoCSActionPerformed(evt);
            }
        });

        But_VerSolicitud.setText("Ver solicitud");
        But_VerSolicitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_VerSolicitudActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel2.setText("Empleados Client Solution");

        Table_Solicitud.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Estado", "Fuente", "Canal", "Descripcion", "Incidencia", "Fecha Inicio", "Fecha Cierre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Table_Solicitud);

        But_Add_EmpleadoE.setText("Agregar empleado E");
        But_Add_EmpleadoE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_Add_EmpleadoEActionPerformed(evt);
            }
        });

        But_Ver_EmpleadoE.setText("Ver datos del empleado");
        But_Ver_EmpleadoE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_Ver_EmpleadoEActionPerformed(evt);
            }
        });

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList2);

        jLabel3.setText("Empleados Engineering");

        But_Filtro_Estado.setText("Filtrar por Estado");
        But_Filtro_Estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_Filtro_EstadoActionPerformed(evt);
            }
        });

        But_Filtro_Fechas.setText("Filtro entre Fechas");
        But_Filtro_Fechas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_Filtro_FechasActionPerformed(evt);
            }
        });

        But_SinFiltro.setText("Quitar Filtro");
        But_SinFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_SinFiltroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(But_VerSolicitud, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(But_Filtro_Estado, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(But_Filtro_Fechas, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(But_SinFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(330, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(But_Add_EmpleadoCS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(But_Ver_EmpleadoCS, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(But_Add_EmpleadoE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(But_Ver_EmpleadoE)))
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(71, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(But_Ver_EmpleadoE, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(But_Add_EmpleadoE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(But_Ver_EmpleadoCS)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(But_Add_EmpleadoCS)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(But_Filtro_Estado)
                    .addComponent(But_VerSolicitud)
                    .addComponent(But_Filtro_Fechas)
                    .addComponent(But_SinFiltro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void But_Add_EmpleadoCSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_Add_EmpleadoCSActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        EmpleadoCS objSol = new EmpleadoCS();
        objSol.setVisible(true);
    }//GEN-LAST:event_But_Add_EmpleadoCSActionPerformed

    private void But_Ver_EmpleadoCSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_Ver_EmpleadoCSActionPerformed
        // TODO add your handling code here:
        String empleadoSeleccionado = jList1.getSelectedValue();
        if (empleadoSeleccionado==null){
            JOptionPane.showMessageDialog(null,"No ha seleccionado un empleado");
        }else {
            EmpleadoCS objSV = new EmpleadoCS(empleadoSeleccionado);
            this.setVisible(false);
            objSV.setVisible(true);
        }
    }//GEN-LAST:event_But_Ver_EmpleadoCSActionPerformed

    private void But_Add_EmpleadoEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_Add_EmpleadoEActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        EmpleadoE objSol = new EmpleadoE();
        objSol.setVisible(true);
    }//GEN-LAST:event_But_Add_EmpleadoEActionPerformed

    private void But_Ver_EmpleadoEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_Ver_EmpleadoEActionPerformed
        // TODO add your handling code here:
        String empleadoSeleccionado = jList2.getSelectedValue();
        if (empleadoSeleccionado==null){
            JOptionPane.showMessageDialog(null,"No ha seleccionado un empleado");
        }else {
            EmpleadoE objSV = new EmpleadoE(empleadoSeleccionado);
            this.setVisible(false);
            objSV.setVisible(true);
        }
    }//GEN-LAST:event_But_Ver_EmpleadoEActionPerformed

    private void But_VerSolicitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_VerSolicitudActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) Table_Solicitud.getModel();
        String id = String.valueOf(model.getValueAt(Table_Solicitud.getSelectedRow(),0));
        String incidencia = String.valueOf(model.getValueAt(Table_Solicitud.getSelectedRow(),5));
        if (incidencia=="SI"){
            Solicitud_Inicidencia_Ver objSV = new Solicitud_Inicidencia_Ver(Integer.parseInt(id));
            objSV.setVisible(true);
        }else{
            Solicitud_Ver objSV = new Solicitud_Ver(Integer.parseInt(id));
            objSV.setVisible(true);
        }

    }//GEN-LAST:event_But_VerSolicitudActionPerformed

    private void But_Filtro_EstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_Filtro_EstadoActionPerformed
        // TODO add your handling code here:
        Object[] estados = {"Cerrado","Pendiente","Gestion de Incidencia","Reabierto"};
        Object status = JOptionPane.showInputDialog(null,"Selecciona un estado","Elegir",JOptionPane.QUESTION_MESSAGE, null,estados,estados[0]);
        Connection connection = new OracleConecction().conectar();
        String sql = "SELECT s.cod_solicitud, s.status, p.fuente, e.canal, s.descripcion, s.cod_incidencia," +
                " se.fecha_inicio, se.fecha_cierre FROM Solicitud s, Problema p, Error e, Solicitud_Empleado se " +
                "WHERE se.cod_solicitud=s.cod_solicitud AND s.cod_problema=p.cod_problema AND p.cod_error=e.cod_error " +
                "AND s.status='"+status+"' ORDER BY s.cod_solicitud";
        eliminarFilas();
        DefaultTableModel model = (DefaultTableModel) Table_Solicitud.getModel();
        //model.addRow(new Object[]{"1","2","3","4","5","6","7","8"});
        try{
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(sql);
            while (result.next()){
                String e1 = result.getString(1); //cod
                String e2 = result.getString(2); //status
                String e3 = result.getString(3); //fuente
                String e4 = result.getString(4); //canal
                String e5 = result.getString(5); //descripcion
                String e6 = result.getString(6); //incidencia
                if (e6==null){
                    e6="NO";
                }else{
                    e6="SI";
                }
                String e7 = String.valueOf(result.getDate(7)); //fecha_inicio
                String e8 = String.valueOf(result.getDate(8)); //fecha_cierre
                if (e8.equalsIgnoreCase("null")){
                    e8=" -- / -- / -- ";
                }
                model.addRow(new Object[]{e1,e2,e3,e4,e5,e6,e7,e8});
            }
        }catch (SQLException throwables) {
            throwables.printStackTrace();
        }

    }//GEN-LAST:event_But_Filtro_EstadoActionPerformed

    private void But_Filtro_FechasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_Filtro_FechasActionPerformed
        // TODO add your handling code here:
        JTextField fecha1 = new JTextField();
        JTextField fecha2 = new JTextField();
        Object[] message = {"Fecha1: ",fecha1, "Fecha2: ",fecha2};
        int option = JOptionPane.showConfirmDialog(null, message, "Login", JOptionPane.OK_CANCEL_OPTION);
        if (option!=JOptionPane.OK_OPTION){
            System.out.println("Cancelado");
        }
        Connection connection = new OracleConecction().conectar();
        String sql = "SELECT s.cod_solicitud, s.status, p.fuente, e.canal, s.descripcion, s.cod_incidencia," +
                " se.fecha_inicio, se.fecha_cierre FROM Solicitud s, Problema p, Error e, Solicitud_Empleado se " +
                "WHERE se.cod_solicitud=s.cod_solicitud AND s.cod_problema=p.cod_problema AND p.cod_error=e.cod_error AND" +
                " se.fecha_inicio between to_date('"+ fecha1.getText()+"','yy/mm/dd') and to_date('"+fecha2.getText()+"','yy/mm/dd') ORDER BY s.cod_solicitud";
        eliminarFilas();
        System.out.println(sql);
        System.out.println(fecha1.getText());
        System.out.println(fecha2.getText());
        DefaultTableModel model = (DefaultTableModel) Table_Solicitud.getModel();
        //model.addRow(new Object[]{"1","2","3","4","5","6","7","8"});
        try{
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(sql);
            while (result.next()){
                String e1 = result.getString(1); //cod
                String e2 = result.getString(2); //status
                String e3 = result.getString(3); //fuente
                String e4 = result.getString(4); //canal
                String e5 = result.getString(5); //descripcion
                String e6 = result.getString(6); //incidencia
                if (e6==null){
                    e6="NO";
                }else{
                    e6="SI";
                }
                String e7 = String.valueOf(result.getDate(7)); //fecha_inicio
                String e8 = String.valueOf(result.getDate(8)); //fecha_cierre
                if (e8.equalsIgnoreCase("null")){
                    e8=" -- / -- / -- ";
                }
                model.addRow(new Object[]{e1,e2,e3,e4,e5,e6,e7,e8});
            }
        }catch (SQLException throwables) {
            throwables.printStackTrace();
        }
    }//GEN-LAST:event_But_Filtro_FechasActionPerformed

    private void But_SinFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_SinFiltroActionPerformed
        // TODO add your handling code here:
        llenarSolicitudes();
    }//GEN-LAST:event_But_SinFiltroActionPerformed




    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Administrador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton But_Add_EmpleadoCS;
    private javax.swing.JButton But_Add_EmpleadoE;
    private javax.swing.JButton But_Filtro_Estado;
    private javax.swing.JButton But_Filtro_Fechas;
    private javax.swing.JButton But_SinFiltro;
    private javax.swing.JButton But_VerSolicitud;
    private javax.swing.JButton But_Ver_EmpleadoCS;
    private javax.swing.JButton But_Ver_EmpleadoE;
    private javax.swing.JTable Table_Solicitud;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
